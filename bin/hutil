#!/usr/bin/env python
from hutil import Configuration

import optparse
import datetime

class MultipleOption(optparse.Option):
  ACTIONS = optparse.Option.ACTIONS + ("extend",)
  STORE_ACTIONS = optparse.Option.STORE_ACTIONS + ("extend",)
  TYPED_ACTIONS = optparse.Option.TYPED_ACTIONS + ("extend",)
  ALWAYS_TYPED_ACTIONS = optparse.Option.ALWAYS_TYPED_ACTIONS + ("extend",)

  def take_action(self, action, dest, opt, value, values, parser):
    if action == "extend":
      values.ensure_value(dest, []).append(value)
    else:
      optparse.Option.take_action(self, action, dest, opt, value, values, parser)

parser = optparse.OptionParser(option_class=MultipleOption)
parser.add_option("-f", "--file", dest="infile", help="source configuration file")
parser.add_option("-c", "--chroot", dest="chroot", help="change root (only *.yaml)")
parser.add_option("-o", "--output", dest="outfile", help="output file")
parser.add_option("--stdout", dest="stdout", action="store_true", default=True, help="stdout")
parser.add_option("-i", "--indent", dest="indent", help="indent length", default=2)
parser.add_option("-D", "--define", dest="define", help="define key and value pair", action="extend")
parser.add_option("-r", "--replace", dest="replace", help="", default=False, action="store_true")

(options, args) = parser.parse_args()

inXML = False
inYML = False
if options.infile is not None:
  inXML = options.infile.endswith(".xml") if options.infile else False
  inYML = options.infile.endswith(".yaml") if options.infile else False

if options.replace is not False:
  options.outfile = options.infile
  f = file("%s.%s"%(options.infile, datetime.datetime.now().isoformat()), 'w')
  f.write(open(options.infile).read())
  f.flush()
  f.close()

outXML = not inXML
if options.outfile is not None and options.outfile.endswith(".yaml") is False:
  outXML = True

conf = Configuration()
if inXML:
  conf.loadXML(options.infile)
elif inYML:
  conf.loadYAML(options.infile, options.chroot)

if type(options.define) is list:
  for value in options.define:
    conf[value.split("=", 2)[0]] = value.split("=", 2)[1]

if outXML:
  if options.outfile:
    conf.generateAsXMLFile(options.outfile)
  else:
    print conf.generateAsXML(indent=options.indent)
else:
  if options.outfile:
    conf.generateAsYAMLFile(options.outfile)
  else:
    print conf.generateAsYAML()
